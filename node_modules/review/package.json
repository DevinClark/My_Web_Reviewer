{
  "name": "review",
  "version": "0.7.2",
  "description": "Regression testing visual review tool",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/review"
  },
  "keywords": [
    "review",
    "regression",
    "visual",
    "phantomjs",
    "testing",
    "test"
  ],
  "bin": {
    "review": "./bin/review.js"
  },
  "author": {
    "name": "Julian Gruber",
    "email": "julian@juliangruber.com"
  },
  "license": "MIT",
  "dependencies": {
    "optimist": "~0.3.5",
    "jade": "~0.28.1",
    "express": "~3.0.6",
    "mkdirp": "~0.3.4",
    "span": "0.0.5"
  },
  "readme": "# review\n\n_Get screenshots of all your running sites in different resolutions!_\n\nUpdating large and possibly responsively designed sites can be a hassle. You never know whether your change breakes\nanything on the other end of your sitemap, or in a certain resolution, except if have a look at every individual\npage...in every resolution you care about.\n\nThe idea of `review` is not to test everything (and visual testing is hard) but rather use the human mind's excellent\nability to quickly scan information and filter out what you need, i.e. what is broken.\n\n![preview](http://f.cl.ly/items/433L3B2a42140B2c2r2M/screen.png)\n\nIf you want to review many sites at once, like microsoft and bootstrap instead of only multiple pages of the microsoft\nwebsite, check out [review-host](https://github.com/juliangruber/review-host).\n\n## Usage\n\n```bash\n$ npm install -g review\n\n$ review --sites='{\"google\":\"http://google.com\",\"facebook\":\"http://facebook.com\"}'\n$ open http://localhost:4000/\n\n$ # and check\n$ review --usage\nHost review\nUsage: review [options]\n\nExamples: review --sites='{\"google\":\"http://google.com\"}' --cache=100\n\nOptions:\n  --port, -p         Port to listen on                                         [default: 4000]\n  --title, -t        Title of the review                                       [default: \"Review\"]\n  --sites, -s        Sites as JSON Object of strings                           [required]\n  --resolutions, -r  Resolutions as JSON Array of strings                      [default: \"[\\\"1200x800\\\"]\"]\n  --wait, -w         Time to give the page to finish loading, in milliseconds  [default: 0]\n  --cache, -c        Cache snapshots for x milliseconds                        [default: false]\n  --cookie           Make PhatomJS use this cookie-object                      [default: \"{}\"]\n  --cut              Cut snapshots to exact screen size                        [default: false]\n  --help, -h         Print usage instructions                                \n\n```\n\nor\n\n```js\nvar review = require('review')\n\nreview()\n  .title('My Review')\n  .sites({ google : 'http://google.com/' })\n  .resolutions(['1280x1024', '1900x1600', '800x600'])\n  .cache({\n    dir : __dirname + '/cache/',\n    expires : 60\n  })\n  .cookie({\n    name : 'cookie monster',\n    value : 'i eat them!',\n    domain : 'google.com'\n  })\n  .listen(4000)\n```\n\n## API\n\n### review()\n\nReturns an http / express request handler.\n\n### review#title(title)\n\nDisplay `title` in the review. Defaults to `Review`.\n\n### review#sites(sites | fn)\n\nEither pass an object with titles as keys and urls as values, or a `Function` that fetches the sites to be displayed. This way, on every page load that list is refreshed and you can e.g. display all sites present in your sitemap.\n\n```js\nreview.sites(function (cb) {\n  request('http://my.si/temap', function (err, res) {\n    if (err) return cb(err)\n    cb(null, format(res))\n  })\n})\n```\n\nSee [example/sites.js](https://github.com/juliangruber/review/blob/master/example/sites.js)\n\n### review#resolutions([\"WxH\", \"WxH\", ...])\n\nConfigure the resolutions to use for screenshots. Defaults to `[\"1200x800\"]`\n\n### review#wait(x)\n\nPhantomJS will wait for `x` milliseconds after loading the page before it takes the screenshot, so you can make sure your page is completely loaded. Defaults to `0`.\n\n### review#cache({ dir : 'directory', expires : 60 })\n\nCache rendered snapshots for `expires` seconds in `dir`.\n\n### review#cookie(cookie)\n\nPhatomJS will use this cookie when requesting all pages.\n\nThe cookie format is:\n\n```js\n{\n  name : 'valid-cookie-name',             // required\n  value : 'valid-cookie-value',           // required\n  domain : 'the-domain.com',              // required\n  path : '/',\n  httponly : true,\n  secure : false,\n  expires : (new Date()).getTime() + 3600 // expires in 1 hour\n}\n```\n\n### review#cut(bool)\n\nIf `bool` is `true` then screenshots will be cut to the exact dimensions that you specified. Without this pages can be longer than your specified height.\n\n### review#listen(port)\n\nStart the review server on port `port`.\n\n## Installation\n\nYou need to have phantomjs (>=1.7 if you want to use cookies) installed, get it via\n\n```bash\n$ brew install phantomjs\n```\n\nor check [phantomjs.org](http://phantomjs.org/)\n\nThen\n\n```bash\n$ npm install -g review # for cli\n$ npm install review    # for library\n```\n\n## Contibutors\n\n* [juliangruber](https://github.com/juliangruber)\n* [jothirams](https://github.com/jothirams)\n\n## License\n\n(MIT)\n\nCopyright (c) 2012 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "review@0.7.2",
  "_from": "review@"
}
